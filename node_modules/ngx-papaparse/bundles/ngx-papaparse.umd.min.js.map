{"version":3,"file":"ngx-papaparse.umd.min.js","sources":["../../build/papa-parse.service.ts","../../build/papa-parse.module.ts"],"sourcesContent":["import {Injectable, Inject, Optional} from '@angular/core';\nimport {PapaParseGlobalConfig} from './interfaces/papa-parse-global-config';\nimport {PapaParseConfig} from './interfaces/papa-parse-config';\nimport {PapaParseResult} from './interfaces/papa-parse-result';\nimport {PapaUnparseConfig} from './interfaces/papa-unparse-config';\n\n\n@Injectable()\nexport class PapaParseService {\n    private papa: any  = require('papaparse/papaparse.min.js');\n\n    /**\n     * An array of characters that are not allowed as delimiters.\n     */\n    public BAD_DELIMITERS       = this.papa.BAD_DELIMITERS;\n\n    /**\n     * The true delimiter. Invisible. ASCII code 30.\n     * Should be doing the job we strangely rely upon commas and tabs for.\n     */\n    public RECORD_SEP           = this.papa.RECORD_SEP;\n\n    /**\n     * Also sometimes used as a delimiting character. ASCII code 31.\n     */\n    public UNIT_SEP             = this.papa.UNIT_SEP;\n\n    /**\n     * Whether or not the browser supports HTML5 Web Workers.\n     * If false, worker: true will have no effect.\n     */\n    public WORKERS_SUPPORTED    = this.papa.WORKERS_SUPPORTED;\n\n    constructor(@Optional() @Inject('PapaParseGlobalConfig') private config?: PapaParseGlobalConfig) {\n        if (!this.config) {\n            this.config = {};\n        }\n    }\n\n    /**\n     * Parse CSV to an array\n     */\n    public parse(csv: string|File, config?: PapaParseConfig): PapaParseResult {\n        if (config) {\n            if (config.worker === true) {\n                if (this.config.workerScriptPath) {\n                    this.papa.SCRIPT_PATH = this.config.workerScriptPath;\n                } else {\n                    throw new Error('When using workers, the workerScriptPath must be defined in global' +\n                        ' papaparse configuration. See https://github.com/Alberthaff/papaparse/wiki/Using-workers' +\n                        ' for more information.');\n                }\n            }\n        }\n\n        return this.papa.parse(csv, config);\n    }\n\n    /**\n     * Convert an array into CSV\n     */\n    public unparse(data, config?: PapaUnparseConfig): string {\n        return this.papa.unparse(data, config);\n    }\n\n    /**\n     * Set the size in bytes of each file chunk.\n     * Used when streaming files obtained from the DOM that\n     * exist on the local computer. Default 10 MB.\n     */\n    public setLocalChunkSize(value: number): void {\n        this.papa.LocalChunkSize = value;\n    }\n\n    /**\n     * Set the size in bytes of each remote file chunk.\n     * Used when streaming remote files. Default 5 MB.\n     */\n    public setRemoteChunkSize(value: number): void {\n        this.papa.RemoteChunkSize = value;\n    }\n\n    /**\n     * Set the delimiter used when it is left unspecified and cannot be detected automatically. Default is comma.\n     */\n    public setDefaultDelimiter(value: string): void {\n        this.papa.DefaultDelimiter = value;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PapaParseService } from './papa-parse.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    providers: [\n        PapaParseService\n    ]\n})\nexport class PapaParseModule { }\n"],"names":["config","this","require","papa","BAD_DELIMITERS","RECORD_SEP","UNIT_SEP","WORKERS_SUPPORTED","PapaParseService","csv","worker","workerScriptPath","Error","SCRIPT_PATH","parse","data","unparse","value","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Injectable","Optional","Inject","NgModule","imports","CommonModule","providers"],"mappings":"+SAAA,iBAiCI,WAAiEA,GAAAC,YAAAD,YAxB5CE,QAAQ,kDAKCD,KAAKE,KAAKC,+BAMVH,KAAKE,KAAKE,yBAKVJ,KAAKE,KAAKG,gCAMVL,KAAKE,KAAKI,kBAG/BN,KAAKD,SACNC,KAAKD,kBAONQ,2BAAMC,EAAkBT,GAC3B,GAAIA,IACsB,IAAlBA,EAAOU,OAAiB,CACxB,IAAIT,KAAKD,OAAOW,iBAGZ,MAAM,IAAIC,MAAM,oLAFhBX,KAAKE,KAAKU,YAAcZ,KAAKD,OAAOW,iBAShD,OAAOV,KAAKE,KAAKW,MAAML,EAAKT,IAMzBQ,6BAAQO,EAAMf,GACjB,OAAOC,KAAKE,KAAKa,QAAQD,EAAMf,IAQ5BQ,uCAAkBS,GACrBhB,KAAKE,KAAKe,eAAiBD,GAOxBT,wCAAmBS,GACtBhB,KAAKE,KAAKgB,gBAAkBF,GAMzBT,yCAAoBS,GACvBhB,KAAKE,KAAKiB,iBAAmBH,uBA/EpCI,iFA0BgBC,kBAAYC,eAAO,yFC7BnCC,kBACGC,SACIC,gBAEJC,WACInB"}
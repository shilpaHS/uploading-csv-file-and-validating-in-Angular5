{"version":3,"file":"ngx-papaparse.umd.js","sources":["../../build/papa-parse.service.ts","../../build/papa-parse.module.ts"],"sourcesContent":["import {Injectable, Inject, Optional} from '@angular/core';\nimport {PapaParseGlobalConfig} from './interfaces/papa-parse-global-config';\nimport {PapaParseConfig} from './interfaces/papa-parse-config';\nimport {PapaParseResult} from './interfaces/papa-parse-result';\nimport {PapaUnparseConfig} from './interfaces/papa-unparse-config';\n\n\n@Injectable()\nexport class PapaParseService {\n    private papa: any  = require('papaparse/papaparse.min.js');\n\n    /**\n     * An array of characters that are not allowed as delimiters.\n     */\n    public BAD_DELIMITERS       = this.papa.BAD_DELIMITERS;\n\n    /**\n     * The true delimiter. Invisible. ASCII code 30.\n     * Should be doing the job we strangely rely upon commas and tabs for.\n     */\n    public RECORD_SEP           = this.papa.RECORD_SEP;\n\n    /**\n     * Also sometimes used as a delimiting character. ASCII code 31.\n     */\n    public UNIT_SEP             = this.papa.UNIT_SEP;\n\n    /**\n     * Whether or not the browser supports HTML5 Web Workers.\n     * If false, worker: true will have no effect.\n     */\n    public WORKERS_SUPPORTED    = this.papa.WORKERS_SUPPORTED;\n\n    constructor(@Optional() @Inject('PapaParseGlobalConfig') private config?: PapaParseGlobalConfig) {\n        if (!this.config) {\n            this.config = {};\n        }\n    }\n\n    /**\n     * Parse CSV to an array\n     */\n    public parse(csv: string|File, config?: PapaParseConfig): PapaParseResult {\n        if (config) {\n            if (config.worker === true) {\n                if (this.config.workerScriptPath) {\n                    this.papa.SCRIPT_PATH = this.config.workerScriptPath;\n                } else {\n                    throw new Error('When using workers, the workerScriptPath must be defined in global' +\n                        ' papaparse configuration. See https://github.com/Alberthaff/papaparse/wiki/Using-workers' +\n                        ' for more information.');\n                }\n            }\n        }\n\n        return this.papa.parse(csv, config);\n    }\n\n    /**\n     * Convert an array into CSV\n     */\n    public unparse(data, config?: PapaUnparseConfig): string {\n        return this.papa.unparse(data, config);\n    }\n\n    /**\n     * Set the size in bytes of each file chunk.\n     * Used when streaming files obtained from the DOM that\n     * exist on the local computer. Default 10 MB.\n     */\n    public setLocalChunkSize(value: number): void {\n        this.papa.LocalChunkSize = value;\n    }\n\n    /**\n     * Set the size in bytes of each remote file chunk.\n     * Used when streaming remote files. Default 5 MB.\n     */\n    public setRemoteChunkSize(value: number): void {\n        this.papa.RemoteChunkSize = value;\n    }\n\n    /**\n     * Set the delimiter used when it is left unspecified and cannot be detected automatically. Default is comma.\n     */\n    public setDefaultDelimiter(value: string): void {\n        this.papa.DefaultDelimiter = value;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PapaParseService } from './papa-parse.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    providers: [\n        PapaParseService\n    ]\n})\nexport class PapaParseModule { }\n"],"names":["Injectable","Optional","Inject","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;IAiCI,0BAAiE;QAAA,WAAM,GAAN,MAAM;oBAxBlD,OAAO,CAAC,4BAA4B,CAAC;;;;8BAK5B,IAAI,CAAC,IAAI,CAAC,cAAc;;;;;0BAMxB,IAAI,CAAC,IAAI,CAAC,UAAU;;;;wBAKpB,IAAI,CAAC,IAAI,CAAC,QAAQ;;;;;iCAMlB,IAAI,CAAC,IAAI,CAAC,iBAAiB;QAGrD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACpB;KACJ;;;;;;;IAKM,gCAAK;;;;;;cAAC,GAAgB,EAAE,MAAwB;QACnD,IAAI,MAAM,EAAE;YACR,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;oBAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;iBACxD;qBAAM;oBACH,MAAM,IAAI,KAAK,CAAC,oEAAoE;wBAChF,0FAA0F;wBAC1F,wBAAwB,CAAC,CAAC;iBACjC;aACJ;SACJ;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;;;;;;;IAMjC,kCAAO;;;;;;cAAC,IAAI,EAAE,MAA0B;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;;;;;;;;IAQpC,4CAAiB;;;;;;;cAAC,KAAa;QAClC,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;;;;;;;;IAO9B,6CAAkB;;;;;;cAAC,KAAa;QACnC,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;;;;;;;IAM/B,8CAAmB;;;;;cAAC,KAAa;QACpC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;;;gBA/E1CA,eAAU;;;;gDA0BMC,aAAQ,YAAIC,WAAM,SAAC,uBAAuB;;2BAjC3D;;;;;;;ACAA;;;;gBAICC,aAAQ,SAAC;oBACN,OAAO,EAAE;wBACLC,mBAAY;qBACf;oBACD,SAAS,EAAE;wBACP,gBAAgB;qBACnB;iBACJ;;;;0BAXD;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
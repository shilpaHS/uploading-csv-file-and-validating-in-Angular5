!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/core")):"function"==typeof define&&define.amd?define(["exports","@angular/common","@angular/core"],t):t(e.ngxPapaparse={},e.ng.common,e.ng.core)}(this,function(e,t,r){"use strict";var o=function(){function e(e){this.config=e,this.papa=require("papaparse/papaparse.min.js"),this.BAD_DELIMITERS=this.papa.BAD_DELIMITERS,this.RECORD_SEP=this.papa.RECORD_SEP,this.UNIT_SEP=this.papa.UNIT_SEP,this.WORKERS_SUPPORTED=this.papa.WORKERS_SUPPORTED,this.config||(this.config={})}return e.prototype.parse=function(e,t){if(t&&!0===t.worker){if(!this.config.workerScriptPath)throw new Error("When using workers, the workerScriptPath must be defined in global papaparse configuration. See https://github.com/Alberthaff/papaparse/wiki/Using-workers for more information.");this.papa.SCRIPT_PATH=this.config.workerScriptPath}return this.papa.parse(e,t)},e.prototype.unparse=function(e,t){return this.papa.unparse(e,t)},e.prototype.setLocalChunkSize=function(e){this.papa.LocalChunkSize=e},e.prototype.setRemoteChunkSize=function(e){this.papa.RemoteChunkSize=e},e.prototype.setDefaultDelimiter=function(e){this.papa.DefaultDelimiter=e},e.decorators=[{type:r.Injectable}],e.ctorParameters=function(){return[{type:void 0,decorators:[{type:r.Optional},{type:r.Inject,args:["PapaParseGlobalConfig"]}]}]},e}(),a=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{imports:[t.CommonModule],providers:[o]}]}],e.ctorParameters=function(){return[]},e}();e.PapaParseService=o,e.PapaParseModule=a,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-papaparse.umd.min.js.map
